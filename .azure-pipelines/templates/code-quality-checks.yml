stages:
  - stage: 'code_quality'
    displayName: 'Code Quality Checks'

    jobs:
      - job: 'cpp_checks'
        condition: eq(1, 2)
        displayName: 'C++ Checks'
        pool:
          vmImage: 'ubuntu-18.04'
        steps:
          - bash: |
              set -ex
              sudo add-apt-repository --yes 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main'
              sudo apt-get update
              sudo apt-get install --yes clang-format-7
            displayName: 'Install tooling'
          - bash: |
              set -ex
              clang-format-7 --version
              find . -type f -regex '.*\.\(c\|cpp\|h\|hpp\|hui\)' -exec clang-format-7 -i {} +
              git diff
              git diff --quiet
            displayName: 'Run clang-format'

      - job: 'cmake_checks'
        displayName: 'CMake Checks'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true
              architecture: 'x64'
          - bash: pip install cmake_format==0.6.9
            displayName: 'Install tooling'
          - bash: |
              set -ex
              cmake-format --version
              find . -type f \( -name CMakeLists.txt -or -name '*.cmake' \) -exec cmake-format --check '{}' \;
            displayName: 'Run cmake-format'
