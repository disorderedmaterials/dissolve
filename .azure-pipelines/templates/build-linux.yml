parameters:
  - name: package
    default : "dissolve-gui"
  - name: export
    default : false
  - name: docker
    default: "docker-gui"
  - name: singularity
    default: "singularity-gui"
  - name: nix_version
    default: 2.4

steps:
  - bash: |
      set -ex
      # -- General
      sudo apt-get update -q
      sudo apt-get install curl gpg jq
      curl -o install-nix${{ parameters.nix_version }} https://releases.nixos.org/nix/nix-${{ parameters.nix_version }}/install
      curl -o install-nix${{ parameters.nix_version }}.asc https://releases.nixos.org/nix/nix-${{ parameters.nix_version }}/install.asc
      gpg2 --keyserver hkps://keyserver.ubuntu.com --recv-keys B541D55301270E0BCF15CA5D8170B4726D7198DE
      gpg2 --verify ./install-nix${{ parameters.nix_version }}.asc
      sh ./install-nix${{ parameters.nix_version }}
      mkdir -p ~/.config/nix/
      echo "experimental-features = nix-command flakes" >> ~/.config/nix/nix.conf
      echo "system-features = kvm" >> ~/.config/nix/nix.conf
    displayName: 'Install nix'
  - bash: |
      set -ex
      source ~/.nix-profile/etc/profile.d/nix.sh
      nix-env -iA cachix -f https://cachix.org/api/v1/install
      cachix use dissolve-nix
    displayName: 'Install Cachix'
  - bash: |
      set -ex
      source ~/.nix-profile/etc/profile.d/nix.sh
      cachix --version
      echo $CACHIX_AUTH_TOKEN
      nix build --json .#${{ parameters.package }} | jq -r '.[].outputs | to_entries[].value' | cachix push dissolve-nix
    env:
      CACHIX_AUTH_TOKEN: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjJDMzMDIiLCJqdGkiOiI0OTQ2YWM4MS02N2M5LTQyYTktYjQ5My03MDRjMWM4OTVlNzQiLCJzY29wZXMiOiJjYWNoZSJ9.BjXPkbdahAXfrHIUe_MQPGfxQdUkAo4rLSdV5CIGBgg
    displayName: 'Build'
  - bash: |
      set -ex
      source ~/.nix-profile/etc/profile.d/nix.sh
      cachix use dissolve-nix
      nix bundle -L .#${{ parameters.package }}
      mkdir -p packages
      ln -s ${{ parameters.package }} packages/${{ parameters.package }}
      nix build -L .#${{ parameters.singularity }}
      mkdir -p singularity
      ln -s result singularity/${{ parameters.package }}.sif
    env:
      CACHIX_AUTH_TOKEN: $(CACHIX_TOKEN)
    displayName: 'Package'
    condition: eq( '${{ parameters.export }}', 'true' )
