parameters:
  - name: package
    default : "dissolve-gui"
  - name: export
    default : false
  - name: exportExe
    default : true
  - name: exportSingularity
    default : false
  - name: docker
    default: "docker-gui"
  - name: singularity
    default: "singularity-gui"
  - name: nix_version
    default: 2.4

steps:
  - bash: |
      set -ex
      # -- General
      sudo apt-get update -q
      sudo apt-get install curl gpg
      curl -o install-nix${{ parameters.nix_version }} https://releases.nixos.org/nix/nix-${{ parameters.nix_version }}/install
      curl -o install-nix${{ parameters.nix_version }}.asc https://releases.nixos.org/nix/nix-${{ parameters.nix_version }}/install.asc
      gpg2 --keyserver hkps://keyserver.ubuntu.com --recv-keys B541D55301270E0BCF15CA5D8170B4726D7198DE
      gpg2 --verify ./install-nix${{ parameters.nix_version }}.asc
      sh ./install-nix${{ parameters.nix_version }}
      mkdir -p ~/.config/nix/
      echo "experimental-features = nix-command flakes" >> ~/.config/nix/nix.conf
      echo "system-features = kvm" >> ~/.config/nix/nix.conf
    displayName: 'Install nix'
  - bash: |
      set -ex
      source ~/.nix-profile/etc/profile.d/nix.sh
      cp /usr/bin/env ./
      sudo rm -rf /usr/local*
      sudo rm -rf /usr/src*
      sudo rm -rf /usr/share*
      sudo mkdir -p /usr/bin
      sudo cp ./env /usr/bin/env
    displayName: 'Remove redundant ubuntu executables'
  - bash: |
      set -ex
      source ~/.nix-profile/etc/profile.d/nix.sh
      nix-channel --add https://nixos.org/channels/nixos-21.11 nixos
      nix-channel --update
      mkdir -p .config/cachix
      nix-env -iA cachix -f https://cachix.org/api/v1/install
      nix-env -iA nixos.jq
      cachix use dissolve-nix
    displayName: 'Install Cachix'
  - bash: |
      set -ex
      source ~/.nix-profile/etc/profile.d/nix.sh
      nix build -L .#${{ parameters.package }}
      nix build --json .#${{ parameters.package }} > archive.json
    displayName: 'Build'
  - bash: |
      set -ex
      source ~/.nix-profile/etc/profile.d/nix.sh
      cat archive.json | jq -r '.[].outputs | to_entries[].value' | cachix push dissolve-nix
      nix-collect-garbage -d
    displayName: 'Push to Cachix'
    env:
      CACHIX_AUTH_TOKEN: $(cachix_token)
    condition: eq('${{ parameters.export }}', 'true')
  - bash: |
      set -ex
      source ~/.nix-profile/etc/profile.d/nix.sh
      cachix use dissolve-nix
      nix bundle -L .#${{ parameters.package }}
      mkdir -p packages
      cp ${{ parameters.package }} packages/${{ parameters.package }}
      rm ${{ parameters.package }}
    displayName: 'Package Executable'
    condition: and(eq( '${{ parameters.export }}', 'true' ), eq( '${{ parameters.exportExe }}', 'true' ))
  - bash: |
      set -ex
      source ~/.nix-profile/etc/profile.d/nix.sh
      cachix use dissolve-nix
      nix build -L .#${{ parameters.singularity }}
      mkdir -p singularity
      cp result singularity/${{ parameters.package }}.sif
    displayName: 'Package Singularity'
    condition: and(eq( '${{ parameters.export }}', 'true' ), eq( '${{ parameters.exportSingularity }}', 'true' ))
