/*
    *** Species Viewer
    *** src/gui/speciesviewer.uih
    Copyright T. Youngs 2019-2020

    This file is part of Dissolve.

    Dissolve is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Dissolve is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Dissolve.  If not, see <http://www.gnu.org/licenses/>.
*/

#pragma once

#include "gui/render/renderablespecies.h"
#include "gui/viewer.hui"

// Forward Declarations
class Element;
class Species;
class SpeciesAtom;

// Species Rendering Widget
class SpeciesViewer : public BaseViewer
{
    Q_OBJECT

    public:
    // Constructor / Destructor
    SpeciesViewer(QWidget *parent);
    ~SpeciesViewer();

    /*
     * Rendering (BaseViewer virtuals)
     */
    private:
    // Perform post-initialisation operations
    void postInitialiseGL();
    // Perform post-resize operations
    void postResizeGL();
    // Render 2D overlay content
    void render2DOverlay();

    /*
     * Mouse / Keyboard Input (BaseViewer virtuals)
     */
    protected:
    // Mouse moved
    void mouseMoved(int dx, int dy);

    /*
     * Interaction (BaseViewer virtuals)
     */
    public:
    // Interaction Mode enum
    enum InteractionMode
    {
        DefaultInteraction,
        SelectAreaInteraction,
        TranslateViewInteraction,
        RotateViewInteraction,
        DrawInteraction,
        DeleteInteraction,
        nInteractionModes
    };

    private:
    // Clicked atom at the start of the interaction (if any)
    SpeciesAtom *clickedAtom_;
    // Element for created atoms in DrawInteraction
    Element *drawElement_;
    // Species-space coordinates at clicked position for DrawInteraction
    Vec3<double> drawCoordinateStart_;
    // Species-space coordinates at current position for DrawInteraction
    Vec3<double> drawCoordinateCurrent_;

    private:
    // Return atom at specified coordinates
    SpeciesAtom *atomAt(int x, int y);

    protected:
    // Start interaction at the specified screen coordinates
    void startInteraction();
    // End interaction at the specified screen coordinates
    void endInteraction();
    // Cancel current interaction
    void cancelInteraction();

    public:
    // Return text describing current interaction mode
    const QString interactionModeText() const;
    // Set current Element for DrawInteraction
    void setDrawElement(Element *element);
    // Return current Element for DrawInteraction
    Element *drawElement() const;

    /*
     * Source Species
     */
    private:
    // Source Species to display
    Species *species_;

    public:
    // Set target Species
    void setSpecies(Species *sp);
    // Return target Species
    Species *species() const;

    /*
     * Renderable
     */
    private:
    // Renderable for source Species
    RenderableSpecies *speciesRenderable_;

    public:
    // Set renderable draw style
    void setRenderableDrawStyle(RenderableSpecies::SpeciesDisplayStyle ds);
    // Return current renderable draw style
    RenderableSpecies::SpeciesDisplayStyle renderableDrawStyle() const;
    // Recreate selection primitive
    void recreateSelectionPrimitive();

    /*
     * Signals
     */
    signals:
    // Atom selection changed
    void atomSelectionChanged();
};
