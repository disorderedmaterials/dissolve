add_library(
  keywords
  atomtypereflist.cpp
  atomtypeselection.cpp
  base.cpp
  bool.cpp
  broadeningfunction.cpp
  configurationreflist.cpp
  data1dstore.cpp
  data2dstore.cpp
  data3dstore.cpp
  double.cpp
  dynamicsitenodes.cpp
  elementreflist.cpp
  expression.cpp
  expressionvariablevector.cpp
  fileandformat.cpp
  geometrylist.cpp
  group.cpp
  integer.cpp
  isotopologueset.cpp
  linkto.cpp
  list.cpp
  module.cpp
  modulegroups.cpp
  modulevector.cpp
  node.cpp
  nodeandinteger.cpp
  nodearray.cpp
  nodebranch.cpp
  nodereflist.cpp
  nodevalue.cpp
  pairbroadeningfunction.cpp
  procedure.cpp
  range.cpp
  species.cpp
  speciesreflist.cpp
  speciessite.cpp
  speciessitereflist.cpp
  stdstring.cpp
  vec3double.cpp
  vec3integer.cpp
  vec3nodevalue.cpp
  vector_intdouble.cpp
  vector_intstring.cpp
  vector_stringpair.cpp
  atomtypereflist.h
  atomtypeselection.h
  base.h
  bool.h
  broadeningfunction.h
  configurationreflist.h
  data.h
  data1dstore.h
  data2dstore.h
  data3dstore.h
  double.h
  dynamicsitenodes.h
  elementreflist.h
  enumoptions.h
  expression.h
  expressionvariablevector.h
  fileandformat.h
  geometrylist.h
  group.h
  integer.h
  isotopologueset.h
  linkto.h
  list.h
  module.h
  modulegroups.h
  modulevector.h
  node.h
  nodeandinteger.h
  nodearray.h
  nodebranch.h
  nodereflist.h
  nodevalue.h
  nodevalueenumoptions.h
  pairbroadeningfunction.h
  procedure.h
  range.h
  species.h
  speciesreflist.h
  speciessite.h
  speciessitereflist.h
  stdstring.h
  vec3double.h
  vec3integer.h
  vec3labels.h
  vec3nodevalue.h
  vector_intdouble.h
  vector_intstring.h
  vector_stringpair.h
)

include_directories(keywords PRIVATE ${PROJECT_SOURCE_DIR}/src)
target_link_libraries(keywords PRIVATE base)
