name: Build
description: Build Linux via nix

inputs:
  extraCMakeFlags:
    default: ""
  target:
    default: "dissolve"
  cacheOnly:
    type: boolean
    default: false

runs:
  using: "composite"
  steps:

  - name: Install nix
    uses: "./.github/workflows/get-nix"
    with:
      target: ${{ inputs.target }}

  - name: Build
    shell: bash
    run: |
      set -ex

      # Build Singularity target
      target=${{ inputs.target }}
      singularityTarget=${target/dissolve/singularity}
      nix build -L .#$singularityTarget -o sif
      nix build --json .#singularityTarget > archive.json
      ls -lart sif
      ls -R sif

      # Assemble artifacts
      mkdir packages
      cp -v sif packages/${{ inputs.target }}-${{ env.dissolveVersion }}.sif

  - name: Tidy nix Store
    if: ${{ inputs.cacheOnly == 'false' }}
    shell: bash
    run: |
      set -ex
      # Remove the dissolve package from the nix store to save some space and leave just the other deps
      

  - name: Bundle Executable
    if: ${{ inputs.cacheOnly == 'false' }}
    shell: bash
    run: |
      set -ex

      nix bundle -L .#${{ inputs.target }} -o binary

      # Assemble artifacts
      mkdir packages
      cp -v binary packages/${{ inputs.target }}-${{ env.dissolveVersion }}

  - name: Upload Package Artifacts
    if: ${{ inputs.cacheOnly == 'false' }}
    uses: actions/upload-artifact@v3
    with:
      name: packages
      path: ${{ github.workspace }}/packages
