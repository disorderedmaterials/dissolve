name: Build

inputs:
  extraCMakeFlags:
    default: ""
  target:
    default: "dissolve"

runs:
  using: "composite"
  steps:

  - uses: cachix/install-nix-action@v15
    with:
      nix_path: nixpkgs=channel:${{ env.nixOSVersion }}

  - name: Cache install Nix packages
      uses: mtoohey31/cache-flake-attrs@v2
      with:
        key: ${{ runner.os }}-nix-${{ hashFiles('./flake.lock', './flake.nix') }}

  - name: Install cachix
    shell: bash
    run: |
      set -ex

      mkdir -p .config/cachix
      nix-env -iA cachix -f https://cachix.org/api/v1/install

  - name: Build
    shell: bash
    run: |
      set -ex

      # Prep cachix
      cachix use dissolve-nix

      # Build
      nix build -L .#${{ inputs.target }}
      nix build --json .#${{ inputs.target }} > archive.json

  - name: Bundle
    shell: bash
    run: |
      set -ex

      nix bundle -L .#${{ inputs.target }} -o ${{ inputs.target }}
      ls -R ${{ inputs.target }}

      # Assemble artifacts
      mkdir build
      cp -v ${{ inputs.target }} build/${{ inputs.target }}-${{ env.dissolveVersion }}

  - name: Upload Raw Build Artifacts
    uses: actions/upload-artifact@v3
    with:
      name: linux-build-artifacts-${{ inputs.target }}
      path: ${{ github.workspace }}/build
      retention-days: 1
