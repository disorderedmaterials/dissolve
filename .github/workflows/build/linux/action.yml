name: Build

inputs:
  extraCMakeFlags:
    default: ""
  target:
    default: "dissolve"

runs:
  using: "composite"
  steps:

  - uses: cachix/install-nix-action@v15
    with:
      nix_path: nixpkgs=channel:${{ env.nixOSVersion }}


  - name: Cache nix env take N+1
    uses: actions/cache@v2
    with:
      path: |
        # See https://github.com/actions/cache/pull/726
        /nix/store/**
        # Missing something?
        /nix/var/nix/*/*
        /nix/var/nix/db/*
        /nix/var/nix/db/*/**
        !/nix/var/nix/daemon-socket/socket
        !/nix/var/nix/userpool/*
        !/nix/var/nix/gc.lock
        !/nix/var/nix/db/big-lock
        !/nix/var/nix/db/reserved
      key: ${{ runner.os }}-nix-store

  - name: Install cachix
    shell: bash
    run: |
      set -ex

      mkdir -p .config/cachix
      nix-env -iA cachix -f https://cachix.org/api/v1/install
      # nix-env -iA jq

  - name: Build
    shell: bash
    run: |
      set -ex

      # source ~/.nix-profile/etc/profile.d/nix.sh

      # Prep cachix
      cachix use dissolve-nix

      # Build
      nix build -L .#${{ inputs.target }}
      nix build --json .#${{ inputs.target }} > archive.json

  # - name: "Push to Cachix"
  #   shell: bash
  #   run: |
  #     set -ex

  #     source ~/.nix-profile/etc/profile.d/nix.sh
      # cat archive.json | jq -r '.[].outputs | to_entries[].value' | cachix push dissolve-nix
      # nix-collect-garbage -d

  - name: Bundle
    shell: bash
    run: |
      set -ex

      # source ~/.nix-profile/etc/profile.d/nix.sh

      nix bundle -L .#${{ inputs.target }} -o ${{ inputs.target }}
      ls -R ${{ inputs.target }}

      # Assemble artifacts
      mkdir build
      cp -v ${{ inputs.target }} build/${{ inputs.target }}-${{ env.dissolveVersion }}

  - name: Upload Raw Build Artifacts
    uses: actions/upload-artifact@v3
    with:
      name: linux-build-artifacts-${{ inputs.target }}
      path: ${{ github.workspace }}/build
      retention-days: 1
