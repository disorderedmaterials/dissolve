name: Website
description: Build and publish website

inputs:
  hugoVersion:
    default: "0.98.0"
  webDirRoot:
    default: "github.com/disorderedmaterials/dissolve/edit/develop/web"
  continuous:
    type: boolean
    default: false
  deploy:
    type: boolean
    default: false
  pdfExamples:
    type: boolean
    default: false

runs:
  using: "composite"
  steps:

  - name: 'Set MAJOR Version'
    shell: bash
    run: |
      cd web/docs
      sed -i "s/MAJOR.X/${{ env.dissolveMajorVersion }}.X/g" _index.md
      grep ".X" _index.md

  - name: 'Set Base URL'
    if: ${{ inputs.continuous == 'true' }}
    shell: bash
    run: |
      cd web
      sed -i 's|baseURL = .*|baseURL = "https://docs.projectdissolve.com/continuous/"|g' docs.toml
      grep baseURL docs.toml

  - name: 'Download & Install Hugo (Extended Version)'
    shell: bash
    run: |
      set -ex
      wget https://github.com/gohugoio/hugo/releases/download/v${{ inputs.hugoVersion }}/hugo_extended_${{ inputs.hugoVersion }}_Linux-64bit.deb -O '${{ github.workspace }}/hugo.deb'
      sudo dpkg -i ${{ github.workspace }}/hugo*.deb

  - name: 'Install pandoc / xetex'
    if: ${{ inputs.pdfExamples == 'true' }}
    shell: bash
    run: |
      set -ex
      sudo apt install pandoc
      sudo apt install texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra texlive-xetex

  - name: 'Copy Icons'
    shell: bash
    run: |
      set -ex
      cp -v src/gui/icons/*.svg web/static/img

  - name: 'Meld Examples'
    shell: bash
    run: |
      set -ex
      for example in $(find ./web/content-docs/examples/ -mindepth 1 -maxdepth 1 -type d -not -iname previous)
      do
        ci/scripts/meld-example -d ${example}
      done

  - name: 'Build Site'
    shell: bash
    run: |
      set -ex
      cd web
      npm install
      hugo --contentDir main/ --config main.toml --destination public
      hugo --contentDir docs/ --config docs.toml --destination public-docs

  - name: 'Rewrite Edit Links'
    shell: bash
    run: |
      set -ex
      # Remove language ('en') from 'Edit on GitHub' path links
      find web/public-docs/userguide/ -iname *.html -exec sed -i "s:${{ inputs.webDirRoot }}/docs/en/userguide/:${{ inputs.webDirRoot }}/docs/userguide/:g" {} +
      find web/public-docs/examples/ -iname *.html -exec sed -i "s:${{ inputs.webDirRoot }}/docs/en/examples/:${{ inputs.webDirRoot }}/docs/examples/:g" {} +

  - name: 'Create PDFs'
    if: ${{ inputs.pdfExamples == 'true' }}
    shell: bash
    run: |
      set -ex
      cd web/public-docs/examples/
      for example in $(find . -mindepth 1 -maxdepth 1 -type d -not -iname previous)
      do
        echo "Creating pdf for example \"${example}\"..."
        cd ${example}/single/
        pandoc --pdf-engine=xelatex -V 'mainfont:DejaVuSerif.ttf' -V 'sansfont:DejaVuSans.ttf' -V 'monofont:DejaVuSansMono.ttf' index.html -o ../${example}.pdf
        cd ../../
      done

  - name: 'SSH Deploy to Server (Release)'
    if: ${{ inputs.deploy == 'true' && inputs.continuous == 'false' }}
    shell: bash
    run: |
      echo "${SERVER_ID}" > ./serverId
      echo "${SERVER_KEY}" > ./serverKey
      chmod 0600 ./serverKey ./serverId
      rsync -avz --delete -e "ssh -o UserKnownHostsFile=./serverId -i ./serverKey -p ${SERVER_PORT} -l ${SERVER_USER}" web/public/ ${SERVER_IP}:${SERVER_MAIN_DIR}
      rsync -avz --delete -e "ssh -o UserKnownHostsFile=./serverId -i ./serverKey -p ${SERVER_PORT} -l ${SERVER_USER}" web/public-docs/ ${SERVER_IP}:${SERVER_DOCS_DIR}

  - name: 'SSH Deploy to Server (Continuous, docs only)'
    if: ${{ inputs.deploy == 'true' && inputs.continuous == 'true' }}
    shell: bash
    run: |
      echo "${SERVER_ID}" > ./serverId
      echo "${SERVER_KEY}" > ./serverKey
      chmod 0600 ./serverKey ./serverId
      rsync -avz --delete -e "ssh -o UserKnownHostsFile=./serverId -i ./serverKey -p ${SERVER_PORT} -l ${SERVER_USER}" web/public-docs/ ${SERVER_IP}:${SERVER_DOCS_DIR}/continuous
